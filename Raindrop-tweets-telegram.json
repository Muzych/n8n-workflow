{
  "meta": {
    "instanceId": "6d47937438eab47ac9fe2489aa36ca84252e3e1285b2c1a65491be339e8d9145"
  },
  "nodes": [
    {
      "parameters": {
        "resource": "bookmark",
        "operation": "getAll",
        "collectionId": "={{ 46426882 }}"
      },
      "id": "e32648cd-8a50-4876-9c65-ee443a51f34c",
      "name": "Raindrop",
      "type": "n8n-nodes-base.raindrop",
      "typeVersion": 1,
      "position": [
        -500,
        120
      ],
      "credentials": {
        "raindropOAuth2Api": {
          "id": "tqsEoPbwlRObfkXz",
          "name": "Raindrop account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "@muziyancheng",
        "text": "=üê¶  {{ $json.title }} #bookmark #tweets\n{{ $json.excerpt }}\n\nNote:\n {{ $json.note }}\n\n {{ $json.link }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        380,
        60
      ],
      "id": "3b7d37ff-50e4-49b1-ab65-bbc28f42e63a",
      "credentials": {
        "telegramApi": {
          "id": "Dc1A5U1EMbzXE4hK",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "/* only return new items */\nconst staticData = getWorkflowStaticData('global');\nconst lastItemId = staticData.lastItemId;\n\nconsole.log('lastItemId', lastItemId);\nconst firstItem = items[0];\nlet newItems = [];\n\nfunction getId(item) {\n  return item.json.guid;\n}\n\nif (lastItemId) {\n  for (const item of items) {\n    if (getId(item) === lastItemId) {\n      break;\n    }\n    newItems.push(item)\n  }\n} else {\n  newItems = [firstItem]\n}\n\nstaticData.lastItemId = getId(firstItem)\nreturn newItems.reverse()"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -20,
        80
      ],
      "id": "5f1df753-0de5-4a2f-b2a4-3f7365016871"
    },
    {
      "parameters": {
        "interval": 15,
        "unit": "minutes"
      },
      "name": "Interval",
      "type": "n8n-nodes-base.interval",
      "typeVersion": 1,
      "position": [
        -780,
        120
      ],
      "id": "52a3c7e5-5de0-4974-8ce8-0a57e713ffa6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4134b8e5-309e-4d96-a3fa-6806940cc813",
              "leftValue": "={{ $json.created }}",
              "rightValue": "={{ DateTime.now().minus(15, \"minutes\") }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            },
            {
              "id": "a61a6dbf-570d-4496-a6db-252b765884c2",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5b05c699-cf94-45cb-98bf-b49c898a076c",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -220,
        260
      ]
    },
    {
      "parameters": {},
      "id": "e0ef0974-5e49-45de-9d2c-3aaf1806c6e8",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        80,
        300
      ]
    }
  ],
  "connections": {
    "Raindrop": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Interval": {
      "main": [
        [
          {
            "node": "Raindrop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}
